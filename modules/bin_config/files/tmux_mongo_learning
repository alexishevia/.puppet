#!/bin/bash

# if 'mongoU' session exists, attach to it.
# otherwise, create it with the following windows:
#   - editor: vim
#   - node: bash window ready to run node programs
#   - mongo: mongo server running on top pane (using docker)
#            mongo client running on bottom pane (using docker)

tmux has-session -t mongoU

if [ $? != 0 ]
then
    # editor window
    tmux new -s mongoU -n editor -d
    tmux send-keys -t mongoU:editor 'cd ~/Projects/Personales/mongodb_learning' C-m
    tmux send-keys -t mongoU:editor 'nvm use' C-m
    tmux send-keys -t mongoU:editor 'vim .' C-m

    # node window
    tmux new-window -t mongoU -n node
    tmux send-keys -t mongoU:node 'cd ~/Projects/Personales/mongodb_learning' C-m
    tmux send-keys -t mongoU:node 'nvm use' C-m

    # mongo window (top)
    tmux new-window -t mongoU -n mongo
    tmux send-keys -t mongoU:mongo 'cd ~/Projects/Personales/mongodb_learning' C-m
    tmux send-keys -t mongoU:mongo 'nvm use' C-m
    tmux send-keys -t mongoU:mongo 'docker-compose up' C-m

    # mongo window (bottom)
    tmux split-window -t mongoU:mongo
    tmux send-keys -t mongoU:mongo.1 'sleep 3' C-m
    tmux send-keys -t mongoU:mongo.1 'cd ~/Projects/Personales/mongodb_learning' C-m
    tmux send-keys -t mongoU:mongo.1 'nvm use' C-m
    tmux send-keys -t mongoU:mongo.1 'docker exec -it mongodblearning_mongo_1 mongo' C-m
fi

# select editor window
tmux select-window -t mongoU:editor

# attach to session
tmux attach -t mongoU
